{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\"; // '/api/unsplashImages',\n\nconst useFetch = async (location, url, setFunction) => {\n  _s();\n\n  console.log(location);\n  const {\n    latitude: lat,\n    longitude: lng\n  } = location[\"coords\"];\n  console.log(lat, lng);\n  useEffect(() => {\n    const fetch = async (location, url, setFunction) => {\n      if (location) {\n        const requestOptions = {\n          method: 'POST',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            lat: lat,\n            lng: lng\n          })\n        };\n\n        try {\n          const response = await fetch(requestOptions);\n          const result = await response.json();\n          setFunction(result);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n\n    fetch(location, url);\n  }, [url, location, setFunction, lat, lng]);\n};\n\n_s(useFetch, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport default useFetch;","map":{"version":3,"names":["useEffect","useFetch","location","url","setFunction","console","log","latitude","lat","longitude","lng","fetch","requestOptions","method","headers","body","JSON","stringify","response","result","json","error"],"sources":["/Users/Zach/Desktop/WeatherD_v2/weatherdb/src/components/useFetch.js"],"sourcesContent":["import {useEffect } from \"react\";\n\n// '/api/unsplashImages',\n\n\n\nconst useFetch= async (location, url, setFunction)=>{\n    console.log(location);\n    const {latitude:lat, longitude:lng}=location[\"coords\"];\n    console.log(lat, lng);\n    useEffect(()=>{\n      const fetch= async (location, url, setFunction)=>{\n            if(location){\n             \n                \n               const requestOptions = {\n                       method:'POST',\n                      headers:{\"Content-Type\": \"application/json\"},\n                       body: JSON.stringify({lat:lat, lng:lng})\n                    }\n            try{\n              const response = await fetch(requestOptions);\n              const result = await response.json()\n              setFunction(result)\n            }\n              catch(error){console.log(error);}    \n              }\n        }\n       fetch(location, url,)\n    },[url, location, setFunction, lat, lng])\n    \n}\n\nexport default useFetch"],"mappings":";;AAAA,SAAQA,SAAR,QAAyB,OAAzB,C,CAEA;;AAIA,MAAMC,QAAQ,GAAE,OAAOC,QAAP,EAAiBC,GAAjB,EAAsBC,WAAtB,KAAoC;EAAA;;EAChDC,OAAO,CAACC,GAAR,CAAYJ,QAAZ;EACA,MAAM;IAACK,QAAQ,EAACC,GAAV;IAAeC,SAAS,EAACC;EAAzB,IAA8BR,QAAQ,CAAC,QAAD,CAA5C;EACAG,OAAO,CAACC,GAAR,CAAYE,GAAZ,EAAiBE,GAAjB;EACAV,SAAS,CAAC,MAAI;IACZ,MAAMW,KAAK,GAAE,OAAOT,QAAP,EAAiBC,GAAjB,EAAsBC,WAAtB,KAAoC;MAC3C,IAAGF,QAAH,EAAY;QAGT,MAAMU,cAAc,GAAG;UACfC,MAAM,EAAC,MADQ;UAEhBC,OAAO,EAAC;YAAC,gBAAgB;UAAjB,CAFQ;UAGfC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;YAACT,GAAG,EAACA,GAAL;YAAUE,GAAG,EAACA;UAAd,CAAf;QAHS,CAAvB;;QAKH,IAAG;UACD,MAAMQ,QAAQ,GAAG,MAAMP,KAAK,CAACC,cAAD,CAA5B;UACA,MAAMO,MAAM,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAArB;UACAhB,WAAW,CAACe,MAAD,CAAX;QACD,CAJD,CAKE,OAAME,KAAN,EAAY;UAAChB,OAAO,CAACC,GAAR,CAAYe,KAAZ;QAAoB;MAChC;IACN,CAhBH;;IAiBCV,KAAK,CAACT,QAAD,EAAWC,GAAX,CAAL;EACF,CAnBQ,EAmBP,CAACA,GAAD,EAAMD,QAAN,EAAgBE,WAAhB,EAA6BI,GAA7B,EAAkCE,GAAlC,CAnBO,CAAT;AAqBH,CAzBD;;GAAMT,Q;;AA2BN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}