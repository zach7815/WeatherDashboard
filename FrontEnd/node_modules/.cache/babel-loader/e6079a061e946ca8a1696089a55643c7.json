{"ast":null,"code":"let getLocationPromise = async () => {\n  let navPromise = new Promise(function (resolve, reject) {\n    navigator.geolocation.getCurrentPosition(position => resolve(position), error => reject(error));\n  });\n  let result = await navPromise;\n  return result;\n};\n\nlet coordinates;\ngetLocationPromise().then(response => {\n  coordinates = response;\n});\nconsole.log(coordinates); // const getLocationData=()=>{\n//     getLocationPromise()\n//   .then((res)=>{\n//     const {coords} =res;\n//     return coords;\n//   })\n//   .then( async coords=>{\n//     const requestOptions = {\n//       method:'POST',\n//       headers:{\"Content-Type\": \"application/json\"},\n//       body: JSON.stringify({lat:coords.latitude, lng:coords.longitude})\n//      }\n//      const response = await fetch('/api/location',requestOptions);\n//      const result =await response.json();\n//      return result;\n//     }\n//   ).then(\n//     result=>{\n//       let object= result.JSON()\n//      return object;\n//     }\n//   )\n//   .catch((error)=>{\n//     console.log({error:error.code, message:error.message});\n//   })\n// }\n// export default getLocationData;","map":{"version":3,"names":["getLocationPromise","navPromise","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","error","result","coordinates","then","response","console","log"],"sources":["/Users/Zach/Desktop/WeatherD_v2/weatherdb/src/components/locationScripts.js"],"sourcesContent":["let getLocationPromise = async ()=>{\n    let navPromise= new Promise(function(resolve,reject){\n      navigator.geolocation.getCurrentPosition(\n        position=>resolve(position),\n        error=>reject(error)\n      )\n    })\n    let result =await navPromise;\n       return result;\n    }\n\nlet coordinates;\n\n getLocationPromise().then(response=>{\n    coordinates=response;\n })\n\n    console.log(coordinates);\n\n    // const getLocationData=()=>{\n    //     getLocationPromise()\n    //   .then((res)=>{\n    //     const {coords} =res;\n    //     return coords;\n    //   })\n    //   .then( async coords=>{\n    \n    //     const requestOptions = {\n    //       method:'POST',\n    //       headers:{\"Content-Type\": \"application/json\"},\n    //       body: JSON.stringify({lat:coords.latitude, lng:coords.longitude})\n    //      }\n    //      const response = await fetch('/api/location',requestOptions);\n    //      const result =await response.json();\n         \n    //      return result;\n    //     }\n    //   ).then(\n    //     result=>{\n    //       let object= result.JSON()\n    //      return object;\n    //     }\n    //   )\n    //   .catch((error)=>{\n    //     console.log({error:error.code, message:error.message});\n    //   })\n    // }\n\n    // export default getLocationData;"],"mappings":"AAAA,IAAIA,kBAAkB,GAAG,YAAU;EAC/B,IAAIC,UAAU,GAAE,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAiBC,MAAjB,EAAwB;IAClDC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACEC,QAAQ,IAAEL,OAAO,CAACK,QAAD,CADnB,EAEEC,KAAK,IAAEL,MAAM,CAACK,KAAD,CAFf;EAID,CALe,CAAhB;EAMA,IAAIC,MAAM,GAAE,MAAMT,UAAlB;EACG,OAAOS,MAAP;AACF,CATL;;AAWA,IAAIC,WAAJ;AAECX,kBAAkB,GAAGY,IAArB,CAA0BC,QAAQ,IAAE;EACjCF,WAAW,GAACE,QAAZ;AACF,CAFD;AAIGC,OAAO,CAACC,GAAR,CAAYJ,WAAZ,E,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}