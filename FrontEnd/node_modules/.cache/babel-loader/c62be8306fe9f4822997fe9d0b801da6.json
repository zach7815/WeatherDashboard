{"ast":null,"code":"var _jsxFileName = \"/Users/Zach/Desktop/WeatherD_v2/weatherdb/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport \"./styles.css\"; // let coordinates; \n// function getLocation(){\n// return new Promise((resolve,reject)=>{\n// })\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndocument.addEventListener(\"load\", () => {\n  navigator.geolocation.getCurrentPosition((position, error) => {\n    let latitude = position.coords.latitude;\n    let longitude = position.coords.longitude;\n    let coordinates = {\n      latitude,\n      longitude\n    }; // if(position){\n    // }\n    // else{\n    //   console.log(error);\n    // }\n  });\n}); // console.log(coordinates);\n//     const requestOptions = {\n//       method:'POST',\n//       headers:{\"Content-Type\": \"application/json\"},\n//       body: JSON.stringify(coordinates)\n//      }\n// fetch('/api/location', requestOptions)\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 46,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","document","addEventListener","navigator","geolocation","getCurrentPosition","position","error","latitude","coords","longitude","coordinates","root","createRoot","getElementById","render"],"sources":["/Users/Zach/Desktop/WeatherD_v2/weatherdb/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport \"./styles.css\";\n\n// let coordinates; \n\n// function getLocation(){\n// return new Promise((resolve,reject)=>{\n\n// })\n\n// }\n\ndocument.addEventListener(\"load\", ()=>{\n    navigator.geolocation.getCurrentPosition((position,error)=>{\n      let latitude =position.coords.latitude;\n        let  longitude=position.coords.longitude;\n       let  coordinates={latitude, longitude}\n    \n      // if(position){\n      \n      // }\n      // else{\n      //   console.log(error);\n      // }\n    })\n})\n\n// console.log(coordinates);\n\n\n\n//     const requestOptions = {\n//       method:'POST',\n//       headers:{\"Content-Type\": \"application/json\"},\n//       body: JSON.stringify(coordinates)\n//      }\n   \n     \n// fetch('/api/location', requestOptions)\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,cAAP,C,CAEA;AAEA;AACA;AAEA;AAEA;;;AAEAC,QAAQ,CAACC,gBAAT,CAA0B,MAA1B,EAAkC,MAAI;EAClCC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,CAACC,QAAD,EAAUC,KAAV,KAAkB;IACzD,IAAIC,QAAQ,GAAEF,QAAQ,CAACG,MAAT,CAAgBD,QAA9B;IACE,IAAKE,SAAS,GAACJ,QAAQ,CAACG,MAAT,CAAgBC,SAA/B;IACD,IAAKC,WAAW,GAAC;MAACH,QAAD;MAAWE;IAAX,CAAjB,CAHwD,CAKzD;IAEA;IACA;IACA;IACA;EACD,CAXD;AAYH,CAbD,E,CAeA;AAIA;AACA;AACA;AACA;AACA;AAGA;;AAGA,MAAME,IAAI,GAAGb,QAAQ,CAACc,UAAT,CAAoBZ,QAAQ,CAACa,cAAT,CAAwB,MAAxB,CAApB,CAAb;AACAF,IAAI,CAACG,MAAL,eACE,QAAC,KAAD,CAAO,UAAP;EAAA,uBACE,QAAC,GAAD;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QADF"},"metadata":{},"sourceType":"module"}