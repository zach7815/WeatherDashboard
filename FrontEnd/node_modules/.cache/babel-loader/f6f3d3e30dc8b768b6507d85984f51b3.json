{"ast":null,"code":"var _jsxFileName = \"/Users/Zach/Desktop/WeatherDashboard-Frontend/WeatherDashboard-Frontend/FrontEnd/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport SearchBar from \"./components/SearchBar.jsx\";\nimport CurrentWeather from \"./components/CurrentWeather.jsx\";\nimport CreditDetails from \"./components/ImageCredit.jsx\";\nimport SwiperFunction from \"./components/DailyForecast/SwiperPagination.jsx\";\nimport LocalDateAndTime from \"./components/LocalTime.jsx\";\nimport Tabs from \"./components/TabsComponent/Tabs.jsx\";\nimport \"./styles.css\"; // import useFetch from \"./components/useFetch.js\";\n// import FiveDayForecast from \"./components/DailyForecast/FiveDayWeather.jsx\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getLocationPromise = () => {\n  return new Promise(function (resolve, reject) {\n    navigator.geolocation.getCurrentPosition(position => resolve(position), error => reject(error));\n  });\n};\n\nfunction App() {\n  _s();\n\n  const [forecast, setForecast] = useState();\n  const [currentWeather, setCurrentWeather] = useState();\n  const [location, setLocation] = useState();\n  const [unsplashData, setUnsplashData] = useState();\n  const [loading, setLoading] = useState(false); // requests users current location\n\n  useEffect(() => {\n    setLoading(true);\n    getLocationPromise().then(setLocation(location)).then(location => {\n      const {\n        latitude: lat,\n        longitude: lng\n      } = location[\"coords\"];\n      const requestOptions = {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          lat: lat,\n          lng: lng\n        })\n      };\n      Promise.all([fetch(\"https://weather-dashboard-backend.onrender.com/api/currentWeather\", requestOptions), fetch(\"https://weather-dashboard-backend.onrender.com/api/unsplashImages\", requestOptions), fetch(\"https://weather-dashboard-backend.onrender.com/api/fiveDayForecast\", requestOptions)]).then(results => {\n        Promise.all(results.map(r => r.json()));\n      }).then(dataArray => {\n        setCurrentWeather(dataArray[0]);\n        setUnsplashData(dataArray[1]);\n        setForecast(dataArray[2]);\n        setLoading(false);\n      }).catch(error => {\n        console.log(error);\n      });\n    }, [setLocation, location, setLoading]);\n  }); // useFetch(location, \"https://weather-dashboard-backend.onrender.com/api/currentWeather\", setCurrentWeather);\n  // // calls external unsplash image api\n  // useFetch(location, \"https://weather-dashboard-backend.onrender.com/api/unsplashImages\", setUnsplashData)\n  // // request five days of forecast\n  // useFetch(location,\"https://weather-dashboard-backend.onrender.com/api/fiveDayForecast\", setForecast)\n  // handles background image setting\n  // useEffect(()=>{\n  // const bgImage=document.querySelector(\".backgroundImg\")\n  //   if(!unsplashData){\n  //     bgImage.style.backgroundImage='url(\"https://images.unsplash.com/photo-1513635269975-59663e0ac1ad?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2070&q=80\")';\n  //   }\n  //   else{\n  //  bgImage.style.backgroundImage=`url(${unsplashData[\"display_urls\"][\"full\"]})`;\n  //   }\n  // },[unsplashData])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"backgroundImg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imageOverlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          setWeatherData: setCurrentWeather,\n          setForecastData: setForecast,\n          setImageData: setUnsplashData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(LocalDateAndTime, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {\n          currentWeather: currentWeather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(SwiperFunction, {\n          forecasts: forecast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          forecasts: forecast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(CreditDetails, {\n          photographerDetails: unsplashData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 2\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"8pwYqqWBxwpJVLAf7yIZUAp8F+Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","CurrentWeather","CreditDetails","SwiperFunction","LocalDateAndTime","Tabs","getLocationPromise","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","error","App","forecast","setForecast","currentWeather","setCurrentWeather","location","setLocation","unsplashData","setUnsplashData","loading","setLoading","then","latitude","lat","longitude","lng","requestOptions","method","mode","headers","body","JSON","stringify","all","fetch","results","map","r","json","dataArray","catch","console","log"],"sources":["/Users/Zach/Desktop/WeatherDashboard-Frontend/WeatherDashboard-Frontend/FrontEnd/src/App.jsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport SearchBar from \"./components/SearchBar.jsx\";\nimport CurrentWeather from \"./components/CurrentWeather.jsx\";\nimport CreditDetails from \"./components/ImageCredit.jsx\";\nimport SwiperFunction from \"./components/DailyForecast/SwiperPagination.jsx\";\nimport LocalDateAndTime from \"./components/LocalTime.jsx\";\nimport Tabs from \"./components/TabsComponent/Tabs.jsx\";\nimport \"./styles.css\"\n// import useFetch from \"./components/useFetch.js\";\n// import FiveDayForecast from \"./components/DailyForecast/FiveDayWeather.jsx\";\n\n\n\nconst getLocationPromise = ()=>{\n  return new Promise(function(resolve,reject){\n    navigator.geolocation.getCurrentPosition(\n      position=>resolve(position),\n      error=>reject(error)\n    )\n  })\n  }\n\n\n\nfunction App() {\n  const [forecast, setForecast]= useState();\n  const [currentWeather,setCurrentWeather]=useState();\n  const [location, setLocation]=useState();\n  const [unsplashData, setUnsplashData]=useState();\n  const [loading,setLoading]=useState(false)\n\n// requests users current location\nuseEffect(()=>{\nsetLoading(true)\n  getLocationPromise()\n  .then(setLocation(location))\n  .then((location)=>{\n    const {latitude:lat, longitude:lng}=location[\"coords\"];\n    const requestOptions = {\n        method:'POST',\n         mode:'cors',\n       headers:{\"Content-Type\": \"application/json\"},\n        body: JSON.stringify({lat:lat, lng:lng})\n     }\n     Promise.all([\n      fetch(\"https://weather-dashboard-backend.onrender.com/api/currentWeather\",requestOptions),\n      fetch(\"https://weather-dashboard-backend.onrender.com/api/unsplashImages\",requestOptions),\n      fetch(\"https://weather-dashboard-backend.onrender.com/api/fiveDayForecast\",requestOptions),\n       ])\n     .then((results)=>{\n      Promise.all(results.map(r=>r.json()))\n     })\n     .then((dataArray)=>{\n        setCurrentWeather(dataArray[0]);\n        setUnsplashData(dataArray[1]);\n        setForecast(dataArray[2]);\n        setLoading(false);\n     }).catch(error=>{console.log(error)})\n},[setLocation,location, setLoading])\n})\n\n// useFetch(location, \"https://weather-dashboard-backend.onrender.com/api/currentWeather\", setCurrentWeather);\n\n// // calls external unsplash image api\n// useFetch(location, \"https://weather-dashboard-backend.onrender.com/api/unsplashImages\", setUnsplashData)\n// // request five days of forecast\n// useFetch(location,\"https://weather-dashboard-backend.onrender.com/api/fiveDayForecast\", setForecast)\n// handles background image setting\n// useEffect(()=>{\n// const bgImage=document.querySelector(\".backgroundImg\")\n\n//   if(!unsplashData){\n//     bgImage.style.backgroundImage='url(\"https://images.unsplash.com/photo-1513635269975-59663e0ac1ad?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2070&q=80\")';\n//   }\n//   else{\n//  bgImage.style.backgroundImage=`url(${unsplashData[\"display_urls\"][\"full\"]})`;\n//   }\n// },[unsplashData])\n\n\n\n  return (\n    <div className=\"backgroundImg\">\n    <div className=\"imageOverlay\">\n <div className=\"container\">\n<SearchBar setWeatherData={setCurrentWeather} setForecastData={setForecast} setImageData={setUnsplashData}/>\n<LocalDateAndTime />\n<CurrentWeather currentWeather={currentWeather}/>\n<SwiperFunction forecasts={forecast} />\n<Tabs forecasts={forecast} />\n<CreditDetails photographerDetails={unsplashData} />\n</div>\n </div>\n </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}