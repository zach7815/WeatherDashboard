{"ast":null,"code":"var _jsxFileName = \"/Users/Zach/Desktop/WeatherD_v2/weatherdb/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport SearchBar from \"./components/SearchBar.jsx\";\nimport CurrentWeather from \"./components/CurrentWeather.jsx\";\nimport CreditDetails from \"./components/ImageCredit.jsx\";\nimport SwiperFunction from \"./components/DailyForecast/SwiperPagination.jsx\";\nimport LocalDateAndTime from \"./components/LocalTime.jsx\";\nimport Tabs from \"./components/TabsComponent/Tabs.jsx\";\nimport \"./styles.css\"; // let getLocationPromise = ()=>{\n//   return new Promise(function(resolve,reject){\n//     navigator.geolocation.getCurrentPosition(\n//       position=>resolve(position),\n//       error=>reject(error)\n//     )\n//   })\n//   }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getLocationPromise = async () => {\n  try {\n    const response = await navigator.geolocation.getCurrentPosition();\n    const location = await response.json();\n    console.log(location);\n    return location;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nfunction App() {\n  _s();\n\n  const [forecast, setForecast] = useState();\n  const [currentWeather, setCurrentWeather] = useState();\n  const [location, setLocation] = useState();\n  const [unsplashData, setUnsplashData] = useState();\n  const getBGimage = useCallback(async () => {\n    if (!location) {\n      console.log(\"position not granted\");\n    } else {\n      const {\n        latitude: lat,\n        longitude: lng\n      } = location[\"coords\"];\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          lat: lat,\n          lng: lng\n        })\n      };\n\n      try {\n        const response = await fetch('/api/unsplashImages', requestOptions);\n        const result = await response.json();\n        setUnsplashData(result);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [location]); // requests users current location\n\n  useEffect(() => {\n    getLocationPromise().then(setLocation);\n  }, []); //makes unsplashImage API call\n\n  useEffect(() => {\n    getBGimage();\n  }, [location, getBGimage]); // handles background image setting\n\n  useEffect(() => {\n    const bgImage = document.querySelector(\".backgroundImg\");\n\n    if (!unsplashData) {\n      bgImage.style.backgroundImage = 'url(\"https://images.unsplash.com/photo-1513635269975-59663e0ac1ad?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2070&q=80\")';\n    } else {\n      bgImage.style.backgroundImage = `url(${unsplashData[\"display_urls\"][\"full\"]})`;\n    }\n  }, [unsplashData]); // requests current weather Data\n\n  useEffect(() => {\n    if (!location) {\n      console.log(\"location not granted\");\n    } else {\n      const {\n        latitude: lat,\n        longitude: lng\n      } = location[\"coords\"];\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          lat: lat,\n          lng: lng\n        })\n      };\n      fetch('/api/currentWeather', requestOptions).then(data => data.json()).then(result => {\n        console.log(result);\n        setCurrentWeather(result);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, [location]); //request five days of forecast\n\n  useEffect(() => {\n    if (!location) {\n      console.log(\"location not granted\");\n    } else {\n      const {\n        latitude: lat,\n        longitude: lng\n      } = location[\"coords\"];\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          lat: lat,\n          lng: lng\n        })\n      };\n      fetch('/api/fiveDayForecast', requestOptions).then(data => data.json()).then(setForecast).catch(error => {\n        console.log(error);\n      });\n    }\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"backgroundImg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imageOverlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          setWeatherData: setCurrentWeather,\n          setForecastData: setForecast,\n          setImageData: setUnsplashData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(LocalDateAndTime, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {\n          currentWeather: currentWeather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(SwiperFunction, {\n          forecasts: forecast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          forecasts: forecast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(CreditDetails, {\n          photographerDetails: unsplashData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 2\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"A+F5vZEUPbHPNssgiNU4zqC2nMQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","SearchBar","CurrentWeather","CreditDetails","SwiperFunction","LocalDateAndTime","Tabs","getLocationPromise","response","navigator","geolocation","getCurrentPosition","location","json","console","log","error","App","forecast","setForecast","currentWeather","setCurrentWeather","setLocation","unsplashData","setUnsplashData","getBGimage","latitude","lat","longitude","lng","requestOptions","method","headers","body","JSON","stringify","fetch","result","then","bgImage","document","querySelector","style","backgroundImage","data","catch"],"sources":["/Users/Zach/Desktop/WeatherD_v2/weatherdb/src/App.jsx"],"sourcesContent":["import React, {useState, useEffect, useCallback} from \"react\";\nimport SearchBar from \"./components/SearchBar.jsx\";\nimport CurrentWeather from \"./components/CurrentWeather.jsx\";\nimport CreditDetails from \"./components/ImageCredit.jsx\";\nimport SwiperFunction from \"./components/DailyForecast/SwiperPagination.jsx\";\nimport LocalDateAndTime from \"./components/LocalTime.jsx\";\nimport Tabs from \"./components/TabsComponent/Tabs.jsx\";\nimport \"./styles.css\"\n\n\n\n// let getLocationPromise = ()=>{\n//   return new Promise(function(resolve,reject){\n//     navigator.geolocation.getCurrentPosition(\n//       position=>resolve(position),\n//       error=>reject(error)\n//     )\n//   })\n//   }\nconst getLocationPromise = async()=>{\n  try{\n    const  response= await navigator.geolocation.getCurrentPosition();\n    const location=await response.json();\n    console.log(location);\n    return location;\n  }\n  catch(error){\n      console.log(error);\n  }\n  }\n\n\nfunction App() {\n  const [forecast, setForecast]= useState();\n  const [currentWeather,setCurrentWeather]=useState();\n  const [location, setLocation]=useState();\n  const [unsplashData, setUnsplashData]=useState();\n\n\n  const getBGimage = useCallback(async ()=>{\n    if(!location){\n      console.log(\"position not granted\");\n    }\n    else{\n     const {latitude:lat, longitude:lng}=location[\"coords\"];\n    \n     const requestOptions = {\n             method:'POST',\n            headers:{\"Content-Type\": \"application/json\"},\n             body: JSON.stringify({lat:lat, lng:lng})\n          }\n  try{\n    const response = await fetch('/api/unsplashImages',requestOptions);\n    const result = await response.json()\n    setUnsplashData(result)\n  }\n    catch(error){console.log(error);}    \n    }\n  }\n,[location])\n\n\n\n\n// requests users current location\nuseEffect(()=>{\n  getLocationPromise()\n  .then(setLocation)\n},[])\n\n//makes unsplashImage API call\nuseEffect(()=>{\n \n  getBGimage()\n},[location, getBGimage]);\n\n\n// handles background image setting\nuseEffect(()=>{\nconst bgImage=document.querySelector(\".backgroundImg\")\n\n  if(!unsplashData){\n    bgImage.style.backgroundImage='url(\"https://images.unsplash.com/photo-1513635269975-59663e0ac1ad?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2070&q=80\")';\n  }\n  else{\n bgImage.style.backgroundImage=`url(${unsplashData[\"display_urls\"][\"full\"]})`;\n  }\n},[unsplashData])\n\n// requests current weather Data\nuseEffect(()=>{\nif(!location){\n  console.log(\"location not granted\");\n}\nelse{\n  const {latitude:lat, longitude:lng}=location[\"coords\"];\n  \n   const requestOptions = {\n           method:'POST',\n          headers:{\"Content-Type\": \"application/json\"},\n           body: JSON.stringify({lat:lat, lng:lng})\n        }\n\n        fetch('/api/currentWeather',requestOptions)\n        .then(data=>data.json())\n        .then(result=>{\n          console.log(result)\n          setCurrentWeather(result)\n        })\n        .catch(error=>{console.log(error);})\n}\n},[location])\n\n//request five days of forecast\nuseEffect(()=>{\n  if(!location){\n    console.log(\"location not granted\");\n  }\n  else{\n    const {latitude:lat, longitude:lng}=location[\"coords\"];\n    \n     const requestOptions = {\n             method:'POST',\n            headers:{\"Content-Type\": \"application/json\"},\n             body: JSON.stringify({lat:lat, lng:lng})\n          }\n  \n          fetch('/api/fiveDayForecast',requestOptions)\n          .then(data=>data.json())\n          .then(setForecast)\n          .catch(error=>{console.log(error);})\n  }\n  },[location])\n\n\n\n  return (\n    <div className=\"backgroundImg\">\n    <div className=\"imageOverlay\">\n <div className=\"container\">\n<SearchBar setWeatherData={setCurrentWeather} setForecastData={setForecast} setImageData={setUnsplashData}/>\n<LocalDateAndTime />\n<CurrentWeather currentWeather={currentWeather}/>\n<SwiperFunction forecasts={forecast} />\n<Tabs forecasts={forecast} />\n<CreditDetails photographerDetails={unsplashData} />\n</div>\n </div>\n </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}