{"ast":null,"code":"var _jsxFileName = \"/Users/Zach/Desktop/WeatherD_v2/weatherdb/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet result = []; // const locationSuccess = (position)=>{\n//   const lat = position.coords.latitude;\n//   const lng = position.coords.longitude;\n//  result.push(lat,lng)\n// }\n// const locationError=(error)=>{\n//   const code = error.code;\n//   const message = error.message;\n//   console.log({code, message});\n// }\n\nlet getLocationPromise = () => {\n  return new Promise(function (resolve, reject) {\n    navigator.geolocation.getCurrentPosition(position => resolve(position), error => reject(error));\n  });\n};\n\nconst getLocation = () => {\n  getLocationPromise().then(res => {\n    const {\n      coords\n    } = res;\n    console.log(coords);\n  }).catch(error => {\n    console.log(error.code);\n  });\n};\n\ngetLocation(); //     const requestOptions = {\n//       method:'POST',\n//       headers:{\"Content-Type\": \"application/json\"},\n//       body: JSON.stringify(result)\n//      }\n// fetch('/api/location', requestOptions)\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 56,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","result","getLocationPromise","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","error","getLocation","then","res","coords","console","log","catch","code","root","createRoot","document","getElementById","render"],"sources":["/Users/Zach/Desktop/WeatherD_v2/weatherdb/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport \"./styles.css\";\n\nlet result= [];\n// const locationSuccess = (position)=>{\n//   const lat = position.coords.latitude;\n//   const lng = position.coords.longitude;\n//  result.push(lat,lng)\n// }\n\n// const locationError=(error)=>{\n//   const code = error.code;\n//   const message = error.message;\n//   console.log({code, message});\n// }\n\n\n\nlet getLocationPromise = ()=>{\nreturn new Promise(function(resolve,reject){\n  navigator.geolocation.getCurrentPosition(\n    (position)=>resolve(position),\n    (error)=>reject(error)\n  )\n})\n}\nconst getLocation = ()=>{\n  getLocationPromise()\n  .then((res)=>{\n    const {coords} =res\n    console.log(coords);\n  })\n  .catch((error)=>{\n    console.log(error.code);\n  })\n}\n\ngetLocation();\n\n\n\n//     const requestOptions = {\n//       method:'POST',\n//       headers:{\"Content-Type\": \"application/json\"},\n//       body: JSON.stringify(result)\n//      }\n   \n     \n// fetch('/api/location', requestOptions)\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,cAAP;;AAEA,IAAIC,MAAM,GAAE,EAAZ,C,CACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAIA,IAAIC,kBAAkB,GAAG,MAAI;EAC7B,OAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAiBC,MAAjB,EAAwB;IACzCC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACGC,QAAD,IAAYL,OAAO,CAACK,QAAD,CADrB,EAEGC,KAAD,IAASL,MAAM,CAACK,KAAD,CAFjB;EAID,CALM,CAAP;AAMC,CAPD;;AAQA,MAAMC,WAAW,GAAG,MAAI;EACtBT,kBAAkB,GACjBU,IADD,CACOC,GAAD,IAAO;IACX,MAAM;MAACC;IAAD,IAAUD,GAAhB;IACAE,OAAO,CAACC,GAAR,CAAYF,MAAZ;EACD,CAJD,EAKCG,KALD,CAKQP,KAAD,IAAS;IACdK,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACQ,IAAlB;EACD,CAPD;AAQD,CATD;;AAWAP,WAAW,G,CAIX;AACA;AACA;AACA;AACA;AAGA;;AAGA,MAAMQ,IAAI,GAAGpB,QAAQ,CAACqB,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;AACAH,IAAI,CAACI,MAAL,eACE,QAAC,KAAD,CAAO,UAAP;EAAA,uBACE,QAAC,GAAD;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QADF"},"metadata":{},"sourceType":"module"}