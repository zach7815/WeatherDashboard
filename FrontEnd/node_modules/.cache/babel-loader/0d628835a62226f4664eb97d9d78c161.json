{"ast":null,"code":"let getLocationPromise = () => {\n  return new Promise(function (resolve, reject) {\n    navigator.geolocation.getCurrentPosition(position => resolve(position), error => reject(error));\n  });\n};\n\nconst getLocationData = () => {\n  getLocationPromise().then(res => {\n    const {\n      coords\n    } = res;\n    return coords;\n  }).then(coords => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        lat: coords.latitude,\n        lng: coords.longitude\n      })\n    };\n    const response = fetch('/api/location', requestOptions);\n    const result = response.json();\n    return result;\n  }).then(result => {\n    let object = result.JSON();\n    return object;\n  }).catch(error => {\n    console.log({\n      error: error.code,\n      message: error.message\n    });\n  });\n};\n\nexport { getLocationData };","map":{"version":3,"names":["getLocationPromise","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","error","getLocationData","then","res","coords","requestOptions","method","headers","body","JSON","stringify","lat","latitude","lng","longitude","response","fetch","result","json","object","catch","console","log","code","message"],"sources":["/Users/Zach/Desktop/WeatherD_v2/weatherdb/src/components/locationScripts.js"],"sourcesContent":["let getLocationPromise = ()=>{\n    return new Promise(function(resolve,reject){\n      navigator.geolocation.getCurrentPosition(\n        position=>resolve(position),\n        error=>reject(error)\n      )\n    })\n    }\n\n    const getLocationData=()=>{\n        getLocationPromise()\n      .then((res)=>{\n        const {coords} =res;\n        return coords;\n      })\n      .then( coords=>{\n    \n        const requestOptions = {\n          method:'POST',\n          headers:{\"Content-Type\": \"application/json\"},\n          body: JSON.stringify({lat:coords.latitude, lng:coords.longitude})\n         }\n         const response= fetch('/api/location',requestOptions);\n         const result=response.json();\n         \n         return result;\n        }\n      ).then(\n        result=>{\n          let object= result.JSON()\n         return object;\n        }\n      )\n      .catch((error)=>{\n        console.log({error:error.code, message:error.message});\n      })\n    }\n\n    export  {getLocationData};"],"mappings":"AAAA,IAAIA,kBAAkB,GAAG,MAAI;EACzB,OAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAiBC,MAAjB,EAAwB;IACzCC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACEC,QAAQ,IAAEL,OAAO,CAACK,QAAD,CADnB,EAEEC,KAAK,IAAEL,MAAM,CAACK,KAAD,CAFf;EAID,CALM,CAAP;AAMC,CAPL;;AASI,MAAMC,eAAe,GAAC,MAAI;EACtBT,kBAAkB,GACnBU,IADC,CACKC,GAAD,IAAO;IACX,MAAM;MAACC;IAAD,IAAUD,GAAhB;IACA,OAAOC,MAAP;EACD,CAJC,EAKDF,IALC,CAKKE,MAAM,IAAE;IAEb,MAAMC,cAAc,GAAG;MACrBC,MAAM,EAAC,MADc;MAErBC,OAAO,EAAC;QAAC,gBAAgB;MAAjB,CAFa;MAGrBC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAACC,GAAG,EAACP,MAAM,CAACQ,QAAZ;QAAsBC,GAAG,EAACT,MAAM,CAACU;MAAjC,CAAf;IAHe,CAAvB;IAKC,MAAMC,QAAQ,GAAEC,KAAK,CAAC,eAAD,EAAiBX,cAAjB,CAArB;IACA,MAAMY,MAAM,GAACF,QAAQ,CAACG,IAAT,EAAb;IAEA,OAAOD,MAAP;EACA,CAhBD,EAiBAf,IAjBA,CAkBAe,MAAM,IAAE;IACN,IAAIE,MAAM,GAAEF,MAAM,CAACR,IAAP,EAAZ;IACD,OAAOU,MAAP;EACA,CArBD,EAuBDC,KAvBC,CAuBMpB,KAAD,IAAS;IACdqB,OAAO,CAACC,GAAR,CAAY;MAACtB,KAAK,EAACA,KAAK,CAACuB,IAAb;MAAmBC,OAAO,EAACxB,KAAK,CAACwB;IAAjC,CAAZ;EACD,CAzBC;AA0BH,CA3BD;;AA6BA,SAASvB,eAAT"},"metadata":{},"sourceType":"module"}