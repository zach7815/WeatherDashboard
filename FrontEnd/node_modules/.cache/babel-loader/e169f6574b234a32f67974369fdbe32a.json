{"ast":null,"code":"// let getLocationPromise = async ()=>{\n//     let navPromise= new Promise(function(resolve,reject){\n//       navigator.geolocation.getCurrentPosition(\n//         position=>resolve(position),\n//         error=>reject(error)\n//       )\n//     })\n//     let response =await navPromise;\n//     return response;\n//     }\nasync function getLocation() {\n  let response = await navigator.geolocation.getCurrentPosition(position => position, error => error);\n  let result = await response.json();\n  return result;\n}\n\nlet coordinates = getLocation();\nconsole.log(coordinates); // const getLocationData=()=>{\n//     getLocationPromise()\n//   .then((res)=>{\n//     const {coords} =res;\n//     return coords;\n//   })\n//   .then( async coords=>{\n//     const requestOptions = {\n//       method:'POST',\n//       headers:{\"Content-Type\": \"application/json\"},\n//       body: JSON.stringify({lat:coords.latitude, lng:coords.longitude})\n//      }\n//      const response = await fetch('/api/location',requestOptions);\n//      const result =await response.json();\n//      return result;\n//     }\n//   ).then(\n//     result=>{\n//       let object= result.JSON()\n//      return object;\n//     }\n//   )\n//   .catch((error)=>{\n//     console.log({error:error.code, message:error.message});\n//   })\n// }\n// export default getLocationData;","map":{"version":3,"names":["getLocation","response","navigator","geolocation","getCurrentPosition","position","error","result","json","coordinates","console","log"],"sources":["/Users/Zach/Desktop/WeatherD_v2/weatherdb/src/components/locationScripts.js"],"sourcesContent":["// let getLocationPromise = async ()=>{\n//     let navPromise= new Promise(function(resolve,reject){\n//       navigator.geolocation.getCurrentPosition(\n//         position=>resolve(position),\n//         error=>reject(error)\n//       )\n//     })\n//     let response =await navPromise;\n//     return response;\n//     }\n\nasync function getLocation(){\n    let response= await navigator.geolocation\n    .getCurrentPosition(position=>position,error=>error);\n    let result = await response.json();\n    return result\n}\nlet coordinates= getLocation();\nconsole.log(coordinates);\n\n\n\n\n\n    // const getLocationData=()=>{\n    //     getLocationPromise()\n    //   .then((res)=>{\n    //     const {coords} =res;\n    //     return coords;\n    //   })\n    //   .then( async coords=>{\n    \n    //     const requestOptions = {\n    //       method:'POST',\n    //       headers:{\"Content-Type\": \"application/json\"},\n    //       body: JSON.stringify({lat:coords.latitude, lng:coords.longitude})\n    //      }\n    //      const response = await fetch('/api/location',requestOptions);\n    //      const result =await response.json();\n         \n    //      return result;\n    //     }\n    //   ).then(\n    //     result=>{\n    //       let object= result.JSON()\n    //      return object;\n    //     }\n    //   )\n    //   .catch((error)=>{\n    //     console.log({error:error.code, message:error.message});\n    //   })\n    // }\n\n    // export default getLocationData;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAeA,WAAf,GAA4B;EACxB,IAAIC,QAAQ,GAAE,MAAMC,SAAS,CAACC,WAAV,CACnBC,kBADmB,CACAC,QAAQ,IAAEA,QADV,EACmBC,KAAK,IAAEA,KAD1B,CAApB;EAEA,IAAIC,MAAM,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAnB;EACA,OAAOD,MAAP;AACH;;AACD,IAAIE,WAAW,GAAET,WAAW,EAA5B;AACAU,OAAO,CAACC,GAAR,CAAYF,WAAZ,E,CAMI;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}